{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rana\\\\Documents\\\\GitHub\\\\react-native-devskill\\\\class10\\\\BootCampApp\\\\src\\\\screens\\\\auth\\\\Signup.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"../../components/common/Text\";\nimport { Colors, Images, Metrics } from \"../../theme\";\nimport cs from \"../../theme/common-styles\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport TextInput from \"../../components/common/Input\";\nimport Button from \"../../components/common/Button\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nvar validationSchema = yup.object().shape({\n  email: yup.string().trim().label(\"Email\").email().required(\"Email field is empty\"),\n  password: yup.string().label(\"Password\").required(\"Password field is empty\")\n});\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: cs.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: Images.landing,\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    onSubmit: function onSubmit(values, action) {\n      console.log({\n        values: values\n      });\n    },\n    validationSchema: validationSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, function (formikProps) {\n    return React.createElement(View, {\n      style: styles.formWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"Email\",\n      formikProps: formikProps,\n      formikKey: \"email\",\n      autoCapitalize: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"Password\",\n      formikProps: formikProps,\n      formikKey: \"password\",\n      secureTextEntry: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }), React.createElement(Button, {\n      onPress: formikProps.handleSubmit,\n      style: {\n        margin: Metrics.doubleBase\n      },\n      title: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }));\n  }), React.createElement(View, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Signup\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    semiBold: true,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Don't have an account? \", React.createElement(Text, {\n    primaryColor: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 48\n    }\n  }, \"Sign up\")))));\n}\nvar styles = StyleSheet.create({\n  formWrapper: {\n    marginTop: Metrics.doubleBase,\n    marginHorizontal: Metrics.base\n  },\n  footer: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    paddingBottom: Metrics.base\n  }\n});","map":{"version":3,"sources":["C:/Users/Rana/Documents/GitHub/react-native-devskill/class10/BootCampApp/src/screens/auth/Signup.js"],"names":["React","Text","Colors","Images","Metrics","cs","Formik","yup","TextInput","Button","TouchableOpacity","validationSchema","object","shape","email","string","trim","label","required","password","Login","navigation","container","landing","width","values","action","console","log","formikProps","styles","formWrapper","handleSubmit","margin","doubleBase","footer","navigate","StyleSheet","create","marginTop","marginHorizontal","base","flex","justifyContent","paddingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, Image } from \"react-native\";\r\nimport Text from \"../../components/common/Text\";\r\nimport { Colors, Images, Metrics } from \"../../theme\";\r\nimport cs from \"../../theme/common-styles\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TextInput from \"../../components/common/Input\";\r\nimport Button from \"../../components/common/Button\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .trim()\r\n        .label(\"Email\")\r\n        .email()\r\n        .required(\"Email field is empty\"),\r\n    password: yup.string().label(\"Password\").required(\"Password field is empty\"),\r\n});\r\n\r\nexport default function Login({ navigation }) {\r\n    return (\r\n        <View style={cs.container}>\r\n            <Image source={Images.landing} style={{ width: \"100%\" }} />\r\n\r\n            <Formik\r\n                initialValues={{ email: \"\", password: \"\" }}\r\n                onSubmit={(values, action) => {\r\n                    console.log({ values });\r\n                }}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {(formikProps) => {\r\n                    return (\r\n                        <View style={styles.formWrapper}>\r\n                            <TextInput\r\n                                placeholder=\"Email\"\r\n                                formikProps={formikProps}\r\n                                formikKey={\"email\"}\r\n                                autoCapitalize=\"none\"\r\n                            />\r\n\r\n                            <TextInput\r\n                                placeholder=\"Password\"\r\n                                formikProps={formikProps}\r\n                                formikKey={\"password\"}\r\n                                secureTextEntry={true}\r\n                            />\r\n\r\n                            <Button\r\n                                onPress={formikProps.handleSubmit}\r\n                                style={{ margin: Metrics.doubleBase }}\r\n                                title=\"Login\"\r\n                            />\r\n                        </View>\r\n                    );\r\n                }}\r\n            </Formik>\r\n\r\n            <View style={styles.footer}>\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"Signup\")}>\r\n                    <Text semiBold centered>\r\n                        Don't have an account? <Text primaryColor>Sign up</Text>\r\n                    </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    formWrapper: {\r\n        marginTop: Metrics.doubleBase,\r\n        marginHorizontal: Metrics.base,\r\n    },\r\n\r\n    footer: {\r\n        flex: 1,\r\n        justifyContent: \"flex-end\",\r\n        paddingBottom: Metrics.base,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}