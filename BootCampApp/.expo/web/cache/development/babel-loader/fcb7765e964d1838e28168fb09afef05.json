{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rana\\\\Documents\\\\GitHub\\\\react-native-devskill\\\\class10\\\\BootCampApp\\\\src\\\\screens\\\\auth\\\\Signup.js\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"../../components/common/Text\";\nimport { Colors, Images, Metrics } from \"../../theme\";\nimport cs from \"../../theme/common-styles\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport TextInput from \"../../components/common/Input\";\nimport Button from \"../../components/common/Button\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport API from \"../../api\";\nvar validationSchema = yup.object().shape({\n  email: yup.string().trim().label(\"Email\").email().required(\"Email field is empty\"),\n  password: yup.string().label(\"Password\").required(\"Password field is empty\").min(5, \"Too short password\"),\n  name: yup.string().label(\"name\").required(\"Name field is empty\"),\n  bio: yup.string().label(\"bio\").required(\"Bio field is empty\")\n});\nexport default function Signup(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: cs.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      bio: \"\",\n      name: \"\"\n    },\n    onSubmit: function _callee(values, action) {\n      var registerURL;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log({\n                values: values\n              });\n              registerURL = \"auth/register\";\n              API.post(registerURL, values).then(function (res) {\n                return console.log(res);\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    validationSchema: validationSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, function (formikProps) {\n    return React.createElement(View, {\n      style: styles.formWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"Full Name\",\n      formikProps: formikProps,\n      formikKey: \"name\",\n      autoCapitalize: \"words\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"Email\",\n      formikProps: formikProps,\n      formikKey: \"email\",\n      autoCapitalize: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }), React.createElement(TextInput, {\n      placeholder: \"Short bio\",\n      formikProps: formikProps,\n      formikKey: \"email\",\n      autoCapitalize: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }), React.createElement(Button, {\n      onPress: formikProps.handleSubmit,\n      style: {\n        margin: Metrics.doubleBase\n      },\n      title: \"Sign up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }));\n  }), React.createElement(View, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    semiBold: true,\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"By continuing, you accept the \", React.createElement(Text, {\n    primaryColor: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 55\n    }\n  }, \"Terms of Use\"), \" \", \"and \", React.createElement(Text, {\n    primaryColor: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Privacy Policy.\")))));\n}\nvar styles = StyleSheet.create({\n  formWrapper: {\n    marginTop: Metrics.doubleBase,\n    marginHorizontal: Metrics.base\n  },\n  footer: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    margin: Metrics.doubleBase\n  }\n});","map":{"version":3,"sources":["C:/Users/Rana/Documents/GitHub/react-native-devskill/class10/BootCampApp/src/screens/auth/Signup.js"],"names":["React","Text","Colors","Images","Metrics","cs","Formik","yup","TextInput","Button","TouchableOpacity","API","validationSchema","object","shape","email","string","trim","label","required","password","min","name","bio","Signup","navigation","container","values","action","console","log","registerURL","post","then","res","catch","err","formikProps","styles","formWrapper","handleSubmit","margin","doubleBase","footer","goBack","StyleSheet","create","marginTop","marginHorizontal","base","flex","justifyContent"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,IAAP;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB;AACA,OAAOC,EAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,GAAP;AAEA,IAAMC,gBAAgB,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,KAAK,EAAER,GAAG,CACLS,MADE,GAEFC,IAFE,GAGFC,KAHE,CAGI,OAHJ,EAIFH,KAJE,GAKFI,QALE,CAKO,sBALP,CADiC;AAOxCC,EAAAA,QAAQ,EAAEb,GAAG,CACRS,MADK,GAELE,KAFK,CAEC,UAFD,EAGLC,QAHK,CAGI,yBAHJ,EAILE,GAJK,CAID,CAJC,EAIE,oBAJF,CAP8B;AAYxCC,EAAAA,IAAI,EAAEf,GAAG,CAACS,MAAJ,GAAaE,KAAb,CAAmB,MAAnB,EAA2BC,QAA3B,CAAoC,qBAApC,CAZkC;AAaxCI,EAAAA,GAAG,EAAEhB,GAAG,CAACS,MAAJ,GAAaE,KAAb,CAAmB,KAAnB,EAA0BC,QAA1B,CAAmC,oBAAnC;AAbmC,CAAnB,CAAzB;AAgBA,eAAe,SAASK,MAAT,OAAgC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC3C,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,EAAE,CAACqB,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEX,MAAAA,KAAK,EAAE,EAAT;AAAaK,MAAAA,QAAQ,EAAE,EAAvB;AAA2BG,MAAAA,GAAG,EAAE,EAAhC;AAAoCD,MAAAA,IAAI,EAAE;AAA1C,KADnB;AAEI,IAAA,QAAQ,EAAE,iBAAOK,MAAP,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,cAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,gBAAAA,MAAM,EAANA;AAAF,eAAZ;AACMI,cAAAA,WAFA,GAEc,eAFd;AAGNpB,cAAAA,GAAG,CAACqB,IAAJ,CAASD,WAAT,EAAsBJ,MAAtB,EACKM,IADL,CACU,UAACC,GAAD;AAAA,uBAASL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAAT;AAAA,eADV,EAEKC,KAFL,CAEW,UAACC,GAAD,EAAS;AACZP,gBAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,eAJL;;AAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFd;AAiBI,IAAA,gBAAgB,EAAExB,gBAjBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBK,UAACyB,WAAD,EAAiB;AACd,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,WAAW,EAAC,WADhB;AAEI,MAAA,WAAW,EAAEF,WAFjB;AAGI,MAAA,SAAS,EAAE,MAHf;AAII,MAAA,cAAc,EAAC,OAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,oBAAC,SAAD;AACI,MAAA,WAAW,EAAC,OADhB;AAEI,MAAA,WAAW,EAAEA,WAFjB;AAGI,MAAA,SAAS,EAAE,OAHf;AAII,MAAA,cAAc,EAAC,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAeI,oBAAC,SAAD;AACI,MAAA,WAAW,EAAC,WADhB;AAEI,MAAA,WAAW,EAAEA,WAFjB;AAGI,MAAA,SAAS,EAAE,OAHf;AAII,MAAA,cAAc,EAAC,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,EA2BI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAEA,WAAW,CAACG,YADzB;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAErC,OAAO,CAACsC;AAAlB,OAFX;AAGI,MAAA,KAAK,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BJ,CADJ;AAmCH,GAvDL,CADJ,EA2DI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMlB,UAAU,CAACmB,MAAX,EAAN;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACkC,oBAAC,IAAD;AAAM,IAAA,YAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADlC,EACyE,GADzE,UAEJ,oBAAC,IAAD;AAAM,IAAA,YAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFI,CADJ,CADJ,CA3DJ,CADJ;AAsEH;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,WAAW,EAAE;AACTQ,IAAAA,SAAS,EAAE3C,OAAO,CAACsC,UADV;AAETM,IAAAA,gBAAgB,EAAE5C,OAAO,CAAC6C;AAFjB,GADgB;AAM7BN,EAAAA,MAAM,EAAE;AACJO,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,cAAc,EAAE,UAFZ;AAGJV,IAAAA,MAAM,EAAErC,OAAO,CAACsC;AAHZ;AANqB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { View, StyleSheet, Image } from \"react-native\";\r\nimport Text from \"../../components/common/Text\";\r\nimport { Colors, Images, Metrics } from \"../../theme\";\r\nimport cs from \"../../theme/common-styles\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport TextInput from \"../../components/common/Input\";\r\nimport Button from \"../../components/common/Button\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport API from \"../../api\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .trim()\r\n        .label(\"Email\")\r\n        .email()\r\n        .required(\"Email field is empty\"),\r\n    password: yup\r\n        .string()\r\n        .label(\"Password\")\r\n        .required(\"Password field is empty\")\r\n        .min(5, \"Too short password\"),\r\n    name: yup.string().label(\"name\").required(\"Name field is empty\"),\r\n    bio: yup.string().label(\"bio\").required(\"Bio field is empty\"),\r\n});\r\n\r\nexport default function Signup({ navigation }) {\r\n    return (\r\n        <View style={cs.container}>\r\n            <Formik\r\n                initialValues={{ email: \"\", password: \"\", bio: \"\", name: \"\" }}\r\n                onSubmit={async (values, action) => {\r\n                    console.log({ values });\r\n                    const registerURL = \"auth/register\";\r\n                    API.post(registerURL, values)\r\n                        .then((res) => console.log(res))\r\n                        .catch((err) => {\r\n                            console.log(err);\r\n                        });\r\n                    // try {\r\n                    //   let res = await API.post(registerURL, values);\r\n                    //   console.log(\"res \", res);\r\n                    // } catch (err) {\r\n                    //   console.log(\"err \", err.response);\r\n                    // }\r\n                }}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {(formikProps) => {\r\n                    return (\r\n                        <View style={styles.formWrapper}>\r\n                            <TextInput\r\n                                placeholder=\"Full Name\"\r\n                                formikProps={formikProps}\r\n                                formikKey={\"name\"}\r\n                                autoCapitalize=\"words\"\r\n                            />\r\n\r\n                            <TextInput\r\n                                placeholder=\"Email\"\r\n                                formikProps={formikProps}\r\n                                formikKey={\"email\"}\r\n                                autoCapitalize=\"none\"\r\n                            />\r\n\r\n                            <TextInput\r\n                                placeholder=\"Short bio\"\r\n                                formikProps={formikProps}\r\n                                formikKey={\"email\"}\r\n                                autoCapitalize=\"none\"\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <Button\r\n                                onPress={formikProps.handleSubmit}\r\n                                style={{ margin: Metrics.doubleBase }}\r\n                                title=\"Sign up\"\r\n                            />\r\n                        </View>\r\n                    );\r\n                }}\r\n            </Formik>\r\n\r\n            <View style={styles.footer}>\r\n                <TouchableOpacity onPress={() => navigation.goBack()}>\r\n                    <Text semiBold centered>\r\n                        By continuing, you accept the <Text primaryColor>Terms of Use</Text>{\" \"}\r\n            and <Text primaryColor>Privacy Policy.</Text>\r\n                    </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    formWrapper: {\r\n        marginTop: Metrics.doubleBase,\r\n        marginHorizontal: Metrics.base,\r\n    },\r\n\r\n    footer: {\r\n        flex: 1,\r\n        justifyContent: \"flex-end\",\r\n        margin: Metrics.doubleBase,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}