{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rana\\\\Documents\\\\GitHub\\\\react-native-devskill\\\\class10\\\\BootCampApp\\\\src\\\\components\\\\common\\\\Input.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Input, Label, Item, Icon } from \"native-base\";\nimport { Colors, Metrics, Fonts } from \"../../theme/\";\nexport default function FormInput(_ref) {\n  var placeholder = _ref.placeholder,\n      formikProps = _ref.formikProps,\n      formikKey = _ref.formikKey,\n      autoCapitalize = _ref.autoCapitalize,\n      secureTextEntry = _ref.secureTextEntry,\n      autoCompleteType = _ref.autoCompleteType,\n      style = _ref.style,\n      maxChar = _ref.maxChar,\n      hint = _ref.hint,\n      multiline = _ref.multiline,\n      textStyle = _ref.textStyle;\n\n  var _useState = useState(Colors.lightGrey),\n      _useState2 = _slicedToArray(_useState, 2),\n      borderColor = _useState2[0],\n      setBorderColor = _useState2[1];\n\n  var onFocus = function onFocus() {\n    setBorderColor(Colors.darkGrey);\n  };\n\n  return React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Item, {\n    style: [{\n      borderColor: borderColor\n    }],\n    floatingLabel: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, React.createElement(Label, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, placeholder), React.createElement(Input, {\n    onChangeText: formikProps.handleChange(formikKey),\n    autoCapitalize: autoCapitalize,\n    autoCompleteType: autoCompleteType,\n    autoCorrect: false,\n    secureTextEntry: secureTextEntry,\n    value: formikProps.values[formikKey],\n    style: [styles.label, {\n      color: Colors.darkGrey\n    }, textStyle],\n    multiline: multiline,\n    onFocus: onFocus,\n    onBlur: function onBlur() {\n      formikProps.setFieldTouched(formikKey, true);\n      setBorderColor(Colors.lightGrey);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), formikProps.touched[formikKey] && formikProps.errors[formikKey] && React.createElement(Text, {\n    style: [styles.label, styles.error],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, formikProps.errors[formikKey]));\n}\nvar styles = StyleSheet.create({\n  wrapper: {\n    marginBottom: Metrics.doubleBase\n  },\n  label: {\n    color: Colors.lightGrey,\n    fontSize: Fonts.size.body,\n    fontFamily: Fonts.type.base\n  },\n  error: {\n    color: Colors.error,\n    fontSize: Fonts.size.caption\n  }\n});","map":{"version":3,"sources":["C:/Users/Rana/Documents/GitHub/react-native-devskill/class10/BootCampApp/src/components/common/Input.js"],"names":["React","useState","Input","Label","Item","Icon","Colors","Metrics","Fonts","FormInput","placeholder","formikProps","formikKey","autoCapitalize","secureTextEntry","autoCompleteType","style","maxChar","hint","multiline","textStyle","lightGrey","borderColor","setBorderColor","onFocus","darkGrey","styles","wrapper","label","handleChange","values","color","setFieldTouched","touched","errors","error","StyleSheet","create","marginBottom","doubleBase","fontSize","size","body","fontFamily","type","base","caption"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { Input, Label, Item, Icon } from \"native-base\";\r\nimport { Colors, Metrics, Fonts } from \"../../theme/\";\r\n\r\nexport default function FormInput({\r\n    placeholder,\r\n    formikProps,\r\n    formikKey,\r\n    autoCapitalize,\r\n    secureTextEntry,\r\n    autoCompleteType,\r\n    style,\r\n    maxChar,\r\n    hint,\r\n    multiline,\r\n    textStyle,\r\n}) {\r\n    const [borderColor, setBorderColor] = useState(Colors.lightGrey);\r\n\r\n    const onFocus = () => {\r\n        setBorderColor(Colors.darkGrey);\r\n    };\r\n\r\n    return (\r\n        <View style={styles.wrapper}>\r\n            <Item style={[{ borderColor }]} floatingLabel>\r\n                <Label style={styles.label}>{placeholder}</Label>\r\n                <Input\r\n                    onChangeText={formikProps.handleChange(formikKey)}\r\n                    autoCapitalize={autoCapitalize}\r\n                    autoCompleteType={autoCompleteType}\r\n                    autoCorrect={false}\r\n                    secureTextEntry={secureTextEntry}\r\n                    value={formikProps.values[formikKey]}\r\n                    style={[styles.label, { color: Colors.darkGrey }, textStyle]}\r\n                    multiline={multiline}\r\n                    onFocus={onFocus}\r\n                    onBlur={() => {\r\n                        formikProps.setFieldTouched(formikKey, true);\r\n                        setBorderColor(Colors.lightGrey);\r\n                    }}\r\n                />\r\n            </Item>\r\n\r\n            {formikProps.touched[formikKey] && formikProps.errors[formikKey] && (\r\n                <Text style={[styles.label, styles.error]}>\r\n                    {formikProps.errors[formikKey]}\r\n                </Text>\r\n            )}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        marginBottom: Metrics.doubleBase,\r\n    },\r\n\r\n    label: {\r\n        color: Colors.lightGrey,\r\n        fontSize: Fonts.size.body,\r\n        fontFamily: Fonts.type.base,\r\n    },\r\n\r\n    error: {\r\n        color: Colors.error,\r\n        fontSize: Fonts.size.caption,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}