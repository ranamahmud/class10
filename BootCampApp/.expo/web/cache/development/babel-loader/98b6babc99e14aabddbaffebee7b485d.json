{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rana\\\\Documents\\\\GitHub\\\\react-native-devskill\\\\class10\\\\BootCampApp\\\\src\\\\navigation\\\\MainNavigation.js\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Colors } from \"../theme/\";\nimport SplashScreen from \"../screens/SplashScreen\";\nimport { Root } from \"native-base\";\nimport AuthNav from \"./AuthNavigation\";\nimport AppNav from \"./AppNavigation\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar Stack = createStackNavigator();\nexport default function MainNavigation() {\n  var _useState = useState(\"ran\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userToken = _useState2[0],\n      setUserToken = _useState2[1];\n\n  var isLoading = false;\n  return React.createElement(Root, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: Colors.primary,\n    barStyle: Platform.OS === \"android\" ? 'light-content' : 'dark-content',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }), React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, isLoading ? React.createElement(Stack.Screen, {\n    name: \"Splash\",\n    component: SplashScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }) : userToken === null ? React.createElement(Stack.Screen, {\n    name: \"Auth\",\n    component: AuthNav,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 50\n    }\n  }) : React.createElement(Stack.Screen, {\n    name: \"App\",\n    component: AppNav,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/Rana/Documents/GitHub/react-native-devskill/class10/BootCampApp/src/navigation/MainNavigation.js"],"names":["React","useEffect","useContext","useState","NavigationContainer","createStackNavigator","SafeAreaView","StatusBar","Colors","SplashScreen","Root","AuthNav","AppNav","Stack","MainNavigation","userToken","setUserToken","isLoading","flex","primary","Platform","OS","headerShown"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,MAAT;AACA,OAAOC,YAAP;AAEA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;;AAGA,IAAMC,KAAK,GAAGR,oBAAoB,EAAlC;AACA,eAAe,SAASS,cAAT,GAA0B;AAAA,kBACHX,QAAQ,CAAC,KAAD,CADL;AAAA;AAAA,MAC9BY,SAD8B;AAAA,MACnBC,YADmB;;AAErC,MAAMC,SAAS,GAAG,KAAlB;AACA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAEV,MAAM,CAACW,OAAnC;AAA4C,IAAA,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,eAA5B,GAA8C,cAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,SAAS,GACN,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,SAAS,EAAER,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAENM,SAAS,KAAK,IAAd,GAAqB,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEJ,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,GACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,KAAnB;AAAyB,IAAA,SAAS,EAAEC,MAApC;AAA4C,IAAA,OAAO,EAAE;AACjDU,MAAAA,WAAW,EAAE;AADoC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJZ,CAHJ,CADJ,CADJ,CADJ;AAmBH","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { Colors } from \"../theme/\";\r\nimport SplashScreen from \"../screens/SplashScreen\";\r\n// import AsyncStorage from \"@react-native-community/async-storage\";\r\nimport { Root } from \"native-base\";\r\nimport AuthNav from \"./AuthNavigation\";\r\nimport AppNav from \"./AppNavigation\";\r\nimport { Platform } from \"react-native\";\r\n\r\nconst Stack = createStackNavigator();\r\nexport default function MainNavigation() {\r\n    const [userToken, setUserToken] = useState(\"ran\");\r\n    const isLoading = false;\r\n    return (\r\n        <Root>\r\n            <NavigationContainer>\r\n                <SafeAreaView style={{ flex: 1 }}>\r\n                    <StatusBar backgroundColor={Colors.primary} barStyle={Platform.OS === \"android\" ? 'light-content' : 'dark-content'} />\r\n\r\n                    <Stack.Navigator>\r\n                        {isLoading ?\r\n                            <Stack.Screen name=\"Splash\" component={SplashScreen} /> :\r\n                            userToken === null ? <Stack.Screen name=\"Auth\" component={AuthNav} /> :\r\n                                <Stack.Screen name=\"App\" component={AppNav} options={{\r\n                                    headerShown: false\r\n                                }} />\r\n                        }\r\n                    </Stack.Navigator>\r\n                </SafeAreaView>\r\n            </NavigationContainer>\r\n        </Root>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}