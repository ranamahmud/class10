{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rana\\\\Documents\\\\GitHub\\\\react-native-devskill\\\\class10\\\\BootCampApp\\\\src\\\\screens\\\\auth\\\\Login.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Colors, Images, Metrics } from \"../../theme\";\nimport cs from \"../../theme/common-styles\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { TextInput } from 'react-native-gesture-handler';\nvar validationSchema = yup.object().shape({\n  email: yup.string().trim().label('Email').email().required('Email field is empty'),\n  password: yup.string().label('Password').email().required('Password field is empty')\n});\nexport default function Login() {\n  return React.createElement(View, {\n    style: cs.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: Images.landing,\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit() {},\n    validationSchema: validationSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, function (formikProps) {\n    return React.createElement(View, {\n      style: styles.formWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, React.createElement(TextInput, {\n      placeholder: \"Email\",\n      formikProps: formikProps,\n      formikKey: \"email\",\n      autoCapitalize: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }\n    }));\n  }));\n}\nvar styles = StyleSheet.create({\n  formWrapper: {\n    marginTop: Metrics.doubleBase,\n    marginHorizontal: Metrics.base\n  }\n});","map":{"version":3,"sources":["C:/Users/Rana/Documents/GitHub/react-native-devskill/class10/BootCampApp/src/screens/auth/Login.js"],"names":["React","Colors","Images","Metrics","cs","Formik","yup","TextInput","validationSchema","object","shape","email","string","trim","label","required","password","Login","container","landing","width","formikProps","styles","formWrapper","StyleSheet","create","marginTop","doubleBase","marginHorizontal","base"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB;AACA,OAAOC,EAAP;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,IAAMC,gBAAgB,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,KAAK,EAAEL,GAAG,CAACM,MAAJ,GAAaC,IAAb,GAAoBC,KAApB,CAA0B,OAA1B,EAAmCH,KAAnC,GAA2CI,QAA3C,CAAoD,sBAApD,CADiC;AAExCC,EAAAA,QAAQ,EAAEV,GAAG,CAACM,MAAJ,GAAaE,KAAb,CAAmB,UAAnB,EAA+BH,KAA/B,GAAuCI,QAAvC,CAAgD,yBAAhD;AAF8B,CAAnB,CAAzB;AAIA,eAAe,SAASE,KAAT,GAAiB;AAC5B,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,EAAE,CAACc,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEhB,MAAM,CAACiB,OAAtB;AAA+B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAE;AAAET,MAAAA,KAAK,EAAE,EAAT;AAAaK,MAAAA,QAAQ,EAAE;AAAvB,KAAvB;AACI,IAAA,QAAQ,EAAE,oBAAM,CAAG,CADvB;AAEI,IAAA,gBAAgB,EAAER,gBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGK,UAACa,WAAD,EAAiB;AACd,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,WAAW,EAAC,OADhB;AAEI,MAAA,WAAW,EAAEF,WAFjB;AAGI,MAAA,SAAS,EAAE,OAHf;AAII,MAAA,cAAc,EAAC,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AASH,GAbL,CAFJ,CADJ;AAqBH;AAED,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,WAAW,EAAE;AACTG,IAAAA,SAAS,EAAEvB,OAAO,CAACwB,UADV;AAETC,IAAAA,gBAAgB,EAAEzB,OAAO,CAAC0B;AAFjB;AADgB,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, View, Image } from 'react-native'\r\nimport { Colors, Images, Metrics } from '../../theme'\r\nimport cs from '../../theme/common-styles'\r\nimport { Formik } from 'formik'\r\nimport * as yup from 'yup';\r\nimport { TextInput } from 'react-native-gesture-handler'\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup.string().trim().label('Email').email().required('Email field is empty'),\r\n    password: yup.string().label('Password').email().required('Password field is empty')\r\n})\r\nexport default function Login() {\r\n    return (\r\n        <View style={cs.container}>\r\n            <Image source={Images.landing} style={{ width: '100%' }} />\r\n            <Formik initialValues={{ email: '', password: '' }}\r\n                onSubmit={() => { }}\r\n                validationSchema={validationSchema}>\r\n                {(formikProps) => {\r\n                    return (\r\n                        <View style={styles.formWrapper}>\r\n                            <TextInput\r\n                                placeholder=\"Email\"\r\n                                formikProps={formikProps}\r\n                                formikKey={\"email\"}\r\n                                autoCapitalize=\"none\" />\r\n                        </View>\r\n                    )\r\n                }}\r\n\r\n            </Formik>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    formWrapper: {\r\n        marginTop: Metrics.doubleBase,\r\n        marginHorizontal: Metrics.base\r\n    }\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}